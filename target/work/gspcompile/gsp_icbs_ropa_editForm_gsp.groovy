import icbs.gl.GlAccount
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_ropa_editForm_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/ropa/_editForm.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraRopa', 'has-error'))
printHtmlPart(1)
invokeTag('textField','g',4,['id':("glContraRopa"),'name':("glContraRopa"),'required':(""),'value':(ropapapapaInstanceInstance?.glContraRopa),'onblur':("validateGlCodeglContraRopa();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',9,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',10,['bean':(ropapapapaInstanceInstance),'field':("glContraRopa")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',13,['bean':(ropapapapaInstanceInstance),'field':("glContraRopa")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',19,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',22,['readonly':("true"),'name':("glbldgdescriptionContra"),'id':("glbldgdescriptionContra"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.glContraRopa).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',28,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',29,['bean':(txnTemplateInstance),'field':("memoTxnType")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',32,['bean':(ropapapapaInstanceInstance),'field':("memoTxnType")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraLitigationExp', 'has-error'))
printHtmlPart(16)
invokeTag('textField','g',37,['id':("glContraLitigationExp"),'name':("glContraLitigationExp"),'required':(""),'value':(ropapapapaInstanceInstance?.glContraLitigationExp),'onblur':("validateGlCodeglContraLitigationExp();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',42,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',43,['bean':(ropapapapaInstanceInstance),'field':("glContraLitigationExp")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',46,['bean':(ropapapapaInstanceInstance),'field':("glContraLitigationExp")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',52,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',55,['readonly':("true"),'name':("glLitigationExpenseDescription"),'id':("glLitigationExpenseDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.glContraLitigationExp).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',61,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',62,['bean':(txnTemplateInstance),'field':("glLitigationExpenseDescription")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',65,['bean':(ropapapapaInstanceInstance),'field':("glLitigationExpenseDescription")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraRopa', 'has-error'))
printHtmlPart(17)
invokeTag('textField','g',70,['id':("glContraBldg"),'name':("glContraBldg"),'required':(""),'value':(ropapapapaInstanceInstance?.glContraBldg),'onblur':("validateGlCodeglContraBldg();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',75,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',76,['bean':(ropapapapaInstanceInstance),'field':("glContraRopa")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',79,['bean':(ropapapapaInstanceInstance),'field':("glContraBldg")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',85,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',88,['readonly':("true"),'name':("glRopaBldgDescription"),'id':("glRopaBldgDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.glContraRopa).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',94,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',95,['bean':(txnTemplateInstance),'field':("glRopaBldgDescription")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',98,['bean':(ropapapapaInstanceInstance),'field':("glRopaBldgDescription")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraRopa', 'has-error'))
printHtmlPart(18)
invokeTag('textField','g',103,['id':("otherAccumlated"),'name':("otherAccumlated"),'required':(""),'value':(ropapapapaInstanceInstance?.otherAccumlated),'onblur':("validateGlCodeotherAccumlated();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',108,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',109,['bean':(ropapapapaInstanceInstance),'field':("otherAccumlated")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',112,['bean':(ropapapapaInstanceInstance),'field':("otherAccumlated")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',118,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',121,['readonly':("true"),'name':("otherAccumulatedDescription"),'id':("otherAccumulatedDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.otherAccumlated).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',127,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',128,['bean':(txnTemplateInstance),'field':("memoTxnType")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',131,['bean':(ropapapapaInstanceInstance),'field':("memoTxnType")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraRopa', 'has-error'))
printHtmlPart(19)
invokeTag('textField','g',136,['id':("ropaIncome"),'name':("ropaIncome"),'required':(""),'value':(ropapapapaInstanceInstance?.ropaIncome),'onblur':("validateGlCoderopaIncome();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',141,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',142,['bean':(ropapapapaInstanceInstance),'field':("ropaIncome")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',145,['bean':(ropapapapaInstanceInstance),'field':("ropaIncome")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',151,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',154,['readonly':("true"),'name':("ropaGainOnSaleDescription"),'id':("ropaGainOnSaleDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.ropaIncome).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',160,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',161,['bean':(txnTemplateInstance),'field':("ropaGainOnSaleDescription")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',164,['bean':(ropapapapaInstanceInstance),'field':("ropaGainOnSaleDescription")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'accumulatedDepreciation', 'has-error'))
printHtmlPart(20)
invokeTag('textField','g',169,['id':("accumulatedDepreciation"),'name':("accumulatedDepreciation"),'required':(""),'value':(ropapapapaInstanceInstance?.accumulatedDepreciation),'onblur':("validateGlCodeAccum();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',174,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',175,['bean':(ropapapapaInstanceInstance),'field':("accumulatedDepreciation")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',178,['bean':(ropapapapaInstanceInstance),'field':("accumulatedDepreciation")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',184,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',187,['readonly':("true"),'name':("accumDescription"),'id':("accumDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.accumulatedDepreciation).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',193,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',194,['bean':(txnTemplateInstance),'field':("accumDescription")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',197,['bean':(ropapapapaInstanceInstance),'field':("accumDescription")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: ropapapapaInstanceInstance, field: 'glContraRopa', 'has-error'))
printHtmlPart(21)
invokeTag('textField','g',202,['id':("otherGl"),'name':("otherGl"),'required':(""),'value':(ropapapapaInstanceInstance?.otherGl),'onblur':("validateGlCodeotherGl();"),'class':("form-control")],-1)
printHtmlPart(2)
createTagBody(1, {->
printHtmlPart(3)
createTagBody(2, {->
printHtmlPart(4)
invokeTag('message','g',207,['error':(it)],-1)
printHtmlPart(5)
})
invokeTag('eachError','g',208,['bean':(ropapapapaInstanceInstance),'field':("otherGl")],2)
printHtmlPart(6)
})
invokeTag('hasErrors','g',211,['bean':(ropapapapaInstanceInstance),'field':("otherGl")],1)
printHtmlPart(7)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(8)
invokeTag('message','g',217,['code':("txnTemplate.memoTxnType.label"),'default':("GL Account Name")],-1)
printHtmlPart(9)
invokeTag('textField','g',220,['readonly':("true"),'name':("otherGlDescription"),'id':("otherGlDescription"),'value':(GlAccount.findByCode(ropapapapaInstanceInstance?.otherGl).name),'class':("form-control")],-1)
printHtmlPart(10)
createTagBody(1, {->
printHtmlPart(11)
createTagBody(2, {->
printHtmlPart(12)
invokeTag('message','g',226,['error':(it)],-1)
printHtmlPart(13)
})
invokeTag('eachError','g',227,['bean':(txnTemplateInstance),'field':("otherGlDescription")],2)
printHtmlPart(14)
})
invokeTag('hasErrors','g',230,['bean':(ropapapapaInstanceInstance),'field':("otherGlDescription")],1)
printHtmlPart(22)
invokeTag('hiddenField','g',234,['id':("financialYear"),'name':("financialYear"),'value':(g.formatDate(date: (runDate), format: 'yyyy'))],-1)
printHtmlPart(23)
invokeTag('hiddenField','g',234,['id':("ropaId"),'name':("ropaId"),'value':(params?.id)],-1)
printHtmlPart(24)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
