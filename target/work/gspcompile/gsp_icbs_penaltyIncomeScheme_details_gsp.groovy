import icbs.loans.PenaltyIncomeScheme
import icbs.lov.ConfigItemStatus
import icbs.admin.Product
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_penaltyIncomeScheme_details_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/penaltyIncomeScheme/_details.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
printHtmlPart(0)
printHtmlPart(1)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'code', 'has-error'))
printHtmlPart(2)
invokeTag('message','g',8,['code':("penaltyIncomeScheme.code.label"),'default':("Code")],-1)
printHtmlPart(3)
invokeTag('textField','g',12,['class':("form-control"),'name':("code"),'maxlength':("10"),'value':(penaltyIncomeSchemeInstance?.code)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',17,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',18,['bean':(penaltyIncomeSchemeInstance),'field':("code")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',21,['bean':(penaltyIncomeSchemeInstance),'field':("code")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'name', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',27,['code':("penaltyIncomeScheme.name.label"),'default':("Name")],-1)
printHtmlPart(11)
invokeTag('textField','g',31,['class':("form-control"),'name':("name"),'maxlength':("75"),'value':(penaltyIncomeSchemeInstance?.name)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',36,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',37,['bean':(penaltyIncomeSchemeInstance),'field':("name")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',40,['bean':(penaltyIncomeSchemeInstance),'field':("name")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'basis', 'has-error'))
printHtmlPart(12)
invokeTag('message','g',46,['code':("penaltyIncomeScheme.basis.label"),'default':("Basis")],-1)
printHtmlPart(13)
invokeTag('select','g',49,['class':("form-control"),'id':("basis"),'name':("basis.id"),'from':(icbs.lov.LoanPenaltyBasis.list()),'optionKey':("id"),'optionValue':("description"),'value':(penaltyIncomeSchemeInstance?.basis?.id)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',54,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',55,['bean':(penaltyIncomeSchemeInstance),'field':("basis")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',58,['bean':(penaltyIncomeSchemeInstance),'field':("basis")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'type', 'has-error'))
printHtmlPart(14)
invokeTag('message','g',64,['code':("penaltyIncomeScheme.type.label"),'default':("Type")],-1)
printHtmlPart(13)
invokeTag('select','g',67,['class':("form-control"),'id':("type"),'name':("type.id"),'from':(icbs.lov.LoanPenaltyType.list()),'optionKey':("id"),'optionValue':("description"),'value':(penaltyIncomeSchemeInstance?.type?.id),'onchange':("updateForm()")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',72,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',73,['bean':(penaltyIncomeSchemeInstance),'field':("type")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',76,['bean':(penaltyIncomeSchemeInstance),'field':("type")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'frequency', 'has-error'))
printHtmlPart(16)
invokeTag('message','g',83,['code':("penaltyIncomeScheme.frequency.label"),'default':("Frequency")],-1)
printHtmlPart(17)
invokeTag('select','g',86,['class':("form-control"),'id':("frequency"),'name':("frequency.id"),'from':(icbs.lov.LoanPenaltyFreq.list()),'optionKey':("id"),'optionValue':("description"),'value':(penaltyIncomeSchemeInstance?.frequency?.id)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',91,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',92,['bean':(penaltyIncomeSchemeInstance),'field':("frequency")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',95,['bean':(penaltyIncomeSchemeInstance),'field':("frequency")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'defaultPenaltyAmount', 'has-error'))
printHtmlPart(18)
invokeTag('message','g',101,['code':("penaltyIncomeScheme.defaultPenaltyAmount.label"),'default':("Default Penalty Amount")],-1)
printHtmlPart(19)
invokeTag('field','g',105,['class':("form-control truncated"),'name':("defaultPenaltyAmount"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'defaultPenaltyAmount'))],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',110,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',111,['bean':(penaltyIncomeSchemeInstance),'field':("defaultPenaltyAmount")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',114,['bean':(penaltyIncomeSchemeInstance),'field':("defaultPenaltyAmount")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'minPenaltyAmount', 'has-error'))
printHtmlPart(20)
invokeTag('message','g',120,['code':("penaltyIncomeScheme.minPenaltyAmount.label"),'default':("Minimum Penalty Amount")],-1)
printHtmlPart(19)
invokeTag('field','g',124,['class':("form-control truncated"),'name':("minPenaltyAmount"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'minPenaltyAmount'))],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',129,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',130,['bean':(penaltyIncomeSchemeInstance),'field':("minPenaltyAmount")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',133,['bean':(penaltyIncomeSchemeInstance),'field':("minPenaltyAmount")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'maxPenaltyAmount', 'has-error'))
printHtmlPart(21)
invokeTag('message','g',139,['code':("penaltyIncomeScheme.maxPenaltyAmount.label"),'default':("Maximum Penalty Amount")],-1)
printHtmlPart(19)
invokeTag('field','g',143,['class':("form-control truncated"),'name':("maxPenaltyAmount"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'maxPenaltyAmount'))],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',148,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',149,['bean':(penaltyIncomeSchemeInstance),'field':("maxPenaltyAmount")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',152,['bean':(penaltyIncomeSchemeInstance),'field':("maxPenaltyAmount")],1)
printHtmlPart(22)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'defaultPenaltyRate', 'has-error'))
printHtmlPart(23)
invokeTag('message','g',160,['code':("penaltyIncomeScheme.defaultPenaltyRate.label"),'default':("Default Penalty Rate (%)")],-1)
printHtmlPart(19)
invokeTag('field','g',164,['class':("form-control"),'name':("defaultPenaltyRate"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'defaultPenaltyRate'))],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',169,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',170,['bean':(penaltyIncomeSchemeInstance),'field':("defaultPenaltyRate")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',173,['bean':(penaltyIncomeSchemeInstance),'field':("defaultPenaltyRate")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'minPenaltyRate', 'has-error'))
printHtmlPart(24)
invokeTag('message','g',179,['code':("penaltyIncomeScheme.minPenaltyRate.label"),'default':("Minimum Penalty Rate (%)")],-1)
printHtmlPart(19)
invokeTag('field','g',183,['class':("form-control"),'name':("minPenaltyRate"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'minPenaltyRate')),'requmaxiremaxd':("")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',188,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',189,['bean':(penaltyIncomeSchemeInstance),'field':("minPenaltyRate")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',192,['bean':(penaltyIncomeSchemeInstance),'field':("minPenaltyRate")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'maxPenaltyRate', 'has-error'))
printHtmlPart(25)
invokeTag('message','g',198,['code':("penaltyIncomeScheme.maxPenaltyRate.label"),'default':("Maximum Penalty Rate (%)")],-1)
printHtmlPart(19)
invokeTag('field','g',202,['class':("form-control"),'name':("maxPenaltyRate"),'value':(fieldValue(bean: penaltyIncomeSchemeInstance, field: 'maxPenaltyRate'))],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',207,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',208,['bean':(penaltyIncomeSchemeInstance),'field':("maxPenaltyRate")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',211,['bean':(penaltyIncomeSchemeInstance),'field':("maxPenaltyRate")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'divisor', 'has-error'))
printHtmlPart(26)
invokeTag('message','g',217,['code':("penaltyIncomeScheme.divisor.label"),'default':("Divisor")],-1)
printHtmlPart(19)
invokeTag('field','g',221,['class':("form-control"),'name':("divisor"),'type':("number"),'value':(penaltyIncomeSchemeInstance.divisor)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',226,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',227,['bean':(penaltyIncomeSchemeInstance),'field':("divisor")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',230,['bean':(penaltyIncomeSchemeInstance),'field':("divisor")],1)
printHtmlPart(27)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'gracePeriod', 'has-error'))
printHtmlPart(28)
invokeTag('message','g',238,['code':("penaltyIncomeScheme.gracePeriod.label"),'default':("Grace Period")],-1)
printHtmlPart(17)
invokeTag('field','g',241,['class':("form-control"),'name':("gracePeriod"),'type':("number"),'value':(penaltyIncomeSchemeInstance.gracePeriod)],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',246,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',247,['bean':(penaltyIncomeSchemeInstance),'field':("gracePeriod")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',250,['bean':(penaltyIncomeSchemeInstance),'field':("gracePeriod")],1)
printHtmlPart(29)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'canChangePenaltyRate', 'has-error'))
printHtmlPart(30)
invokeTag('message','g',256,['code':("penaltyIncomeScheme.canChangePenaltyRate.label"),'default':("Changeable Penalty Rate")],-1)
printHtmlPart(31)
invokeTag('checkBox','g',259,['class':("form-control"),'name':("canChangePenaltyRate"),'value':(penaltyIncomeSchemeInstance?.canChangePenaltyRate)],-1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: penaltyIncomeSchemeInstance, field: 'hasWeekendMode', 'has-error'))
printHtmlPart(32)
invokeTag('message','g',265,['code':("penaltyIncomeScheme.hasWeekendMode.label"),'default':("Weekend Mode")],-1)
printHtmlPart(13)
invokeTag('checkBox','g',268,['class':("form-control"),'name':("hasWeekendMode"),'value':(penaltyIncomeSchemeInstance?.hasWeekendMode)],-1)
printHtmlPart(33)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
