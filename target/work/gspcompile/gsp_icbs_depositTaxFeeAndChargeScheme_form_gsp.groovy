import icbs.deposit.DepositTaxFeeAndChargeScheme
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_depositTaxFeeAndChargeScheme_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/depositTaxFeeAndChargeScheme/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'code', 'has-error'))
printHtmlPart(1)
invokeTag('message','g',8,['code':("depositTaxFeeAndChargeScheme.code.label"),'default':("Code")],-1)
printHtmlPart(2)
invokeTag('textField','g',11,['name':("code"),'maxlength':("10"),'required':(""),'value':(depositTaxFeeAndChargeSchemeInstance?.code),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',17,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',18,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("code")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',21,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("code")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'description', 'has-error'))
printHtmlPart(9)
invokeTag('message','g',26,['code':("depositTaxFeeAndChargeScheme.description.label"),'default':("Description")],-1)
printHtmlPart(2)
invokeTag('textField','g',29,['name':("description"),'required':(""),'value':(depositTaxFeeAndChargeSchemeInstance?.description),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',35,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',36,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("description")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',39,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("description")],1)
printHtmlPart(10)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'name', 'has-error'))
printHtmlPart(11)
invokeTag('message','g',45,['code':("depositTaxFeeAndChargeScheme.name.label"),'default':("Name")],-1)
printHtmlPart(2)
invokeTag('textField','g',48,['name':("name"),'maxlength':("50"),'value':(depositTaxFeeAndChargeSchemeInstance?.name),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',54,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',55,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("name")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',58,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("name")],1)
printHtmlPart(10)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'type', 'has-error'))
printHtmlPart(12)
invokeTag('message','g',64,['code':("depositTaxFeeAndChargeScheme.type.label"),'default':("Type")],-1)
printHtmlPart(2)
invokeTag('select','g',67,['id':("type"),'name':("type.id"),'from':(icbs.lov.TaxFeeCharge.list()),'onchange':("updateForm()"),'optionKey':("id"),'required':(""),'optionValue':("description"),'value':(depositTaxFeeAndChargeSchemeInstance?.type?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',73,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',74,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("type")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',77,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("type")],1)
printHtmlPart(13)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'taxRate', 'has-error'))
printHtmlPart(14)
invokeTag('message','g',84,['code':("depositTaxFeeAndChargeScheme.taxRate.label"),'default':("Tax Rate")],-1)
printHtmlPart(15)
invokeTag('field','g',87,['name':("taxRate"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'taxRate')),'class':("form-control")],-1)
printHtmlPart(16)
createTagBody(1, {->
printHtmlPart(17)
createTagBody(2, {->
printHtmlPart(18)
invokeTag('message','g',93,['error':(it)],-1)
printHtmlPart(19)
})
invokeTag('eachError','g',94,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("taxRate")],2)
printHtmlPart(20)
})
invokeTag('hasErrors','g',97,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("taxRate")],1)
printHtmlPart(21)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeRate', 'has-error'))
printHtmlPart(22)
invokeTag('message','g',104,['code':("depositTaxFeeAndChargeScheme.feeRate.label"),'default':("Fee Rate")],-1)
printHtmlPart(15)
invokeTag('field','g',107,['name':("feeRate"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeRate')),'class':("form-control")],-1)
printHtmlPart(16)
createTagBody(1, {->
printHtmlPart(17)
createTagBody(2, {->
printHtmlPart(18)
invokeTag('message','g',113,['error':(it)],-1)
printHtmlPart(19)
})
invokeTag('eachError','g',114,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeRate")],2)
printHtmlPart(20)
})
invokeTag('hasErrors','g',117,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeRate")],1)
printHtmlPart(23)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeRateBasis', 'has-error'))
printHtmlPart(24)
invokeTag('message','g',122,['code':("depositTaxFeeAndChargeScheme.feeRateBasis.label"),'default':("Fee Rate Basis")],-1)
printHtmlPart(2)
invokeTag('field','g',125,['name':("feeRateBasis"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeRateBasis')),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',131,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',132,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeRateBasis")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',135,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeRateBasis")],1)
printHtmlPart(25)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeAmt', 'has-error'))
printHtmlPart(26)
invokeTag('message','g',142,['code':("depositTaxFeeAndChargeScheme.feeAmt.label"),'default':("Fee Amount")],-1)
printHtmlPart(15)
invokeTag('field','g',145,['name':("feeAmt"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeAmt')),'class':("form-control truncated")],-1)
printHtmlPart(16)
createTagBody(1, {->
printHtmlPart(17)
createTagBody(2, {->
printHtmlPart(18)
invokeTag('message','g',151,['error':(it)],-1)
printHtmlPart(19)
})
invokeTag('eachError','g',152,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeAmt")],2)
printHtmlPart(20)
})
invokeTag('hasErrors','g',155,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeAmt")],1)
printHtmlPart(23)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'feeBaseAmtCondition', 'has-error'))
printHtmlPart(27)
invokeTag('message','g',160,['code':("depositTaxFeeAndChargeScheme.feeBaseAmtCondition.label"),'default':("Fee Base Amount Condition")],-1)
printHtmlPart(28)
invokeTag('checkBox','g',163,['name':("feeBaseAmtCondition"),'value':(depositTaxFeeAndChargeSchemeInstance?.feeBaseAmtCondition)],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',169,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',170,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeBaseAmtCondition")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',173,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("feeBaseAmtCondition")],1)
printHtmlPart(29)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeRate', 'has-error'))
printHtmlPart(30)
invokeTag('message','g',180,['code':("depositTaxFeeAndChargeScheme.chargeRate.label"),'default':("Charge Rate")],-1)
printHtmlPart(15)
invokeTag('field','g',183,['name':("chargeRate"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeRate')),'class':("form-control")],-1)
printHtmlPart(16)
createTagBody(1, {->
printHtmlPart(17)
createTagBody(2, {->
printHtmlPart(18)
invokeTag('message','g',189,['error':(it)],-1)
printHtmlPart(19)
})
invokeTag('eachError','g',190,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeRate")],2)
printHtmlPart(20)
})
invokeTag('hasErrors','g',193,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeRate")],1)
printHtmlPart(23)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeRateBasis', 'has-error'))
printHtmlPart(31)
invokeTag('message','g',198,['code':("depositTaxFeeAndChargeScheme.chargeRateBasis.label"),'default':("Charge Rate Basis")],-1)
printHtmlPart(2)
invokeTag('field','g',201,['name':("chargeRateBasis"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeRateBasis')),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',207,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',208,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeRateBasis")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',211,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeRateBasis")],1)
printHtmlPart(32)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeAmt', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',218,['code':("depositTaxFeeAndChargeScheme.chargeAmt.label"),'default':("Charge Amount")],-1)
printHtmlPart(15)
invokeTag('field','g',221,['name':("chargeAmt"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'chargeAmt')),'class':("form-control truncated")],-1)
printHtmlPart(16)
createTagBody(1, {->
printHtmlPart(17)
createTagBody(2, {->
printHtmlPart(18)
invokeTag('message','g',227,['error':(it)],-1)
printHtmlPart(19)
})
invokeTag('eachError','g',228,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeAmt")],2)
printHtmlPart(20)
})
invokeTag('hasErrors','g',231,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("chargeAmt")],1)
printHtmlPart(34)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'specialCalculation', 'has-error'))
printHtmlPart(35)
invokeTag('message','g',238,['code':("depositTaxFeeAndChargeScheme.specialCalculation.label"),'default':("Special Calculation")],-1)
printHtmlPart(2)
invokeTag('select','g',241,['id':("specialCalculation"),'name':("specialCalculation.id"),'from':(icbs.lov.TfcSpecialCalculationType.list()),'optionKey':("id"),'required':(""),'optionValue':("description"),'value':(depositTaxFeeAndChargeSchemeInstance?.specialCalculation?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',247,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',248,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("specialCalculation")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',251,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("specialCalculation")],1)
printHtmlPart(10)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'gracePeriod', 'has-error'))
printHtmlPart(36)
invokeTag('message','g',257,['code':("depositTaxFeeAndChargeScheme.gracePeriod.label"),'default':("Grace Period")],-1)
printHtmlPart(2)
invokeTag('field','g',260,['name':("gracePeriod"),'type':("number"),'value':(depositTaxFeeAndChargeSchemeInstance.gracePeriod),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',266,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',267,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("gracePeriod")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',270,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("gracePeriod")],1)
printHtmlPart(10)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'isApplyToClosingBal', 'has-error'))
printHtmlPart(37)
invokeTag('message','g',276,['code':("depositTaxFeeAndChargeScheme.isApplyToClosingBal.label"),'default':("Is Apply To Closing Bal")],-1)
printHtmlPart(28)
invokeTag('checkBox','g',279,['name':("isApplyToClosingBal"),'value':(depositTaxFeeAndChargeSchemeInstance?.isApplyToClosingBal)],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',285,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',286,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("isApplyToClosingBal")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',289,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("isApplyToClosingBal")],1)
printHtmlPart(38)
expressionOut.print(hasErrors(bean: depositTaxFeeAndChargeSchemeInstance, field: 'minAmtException', 'has-error'))
printHtmlPart(39)
invokeTag('message','g',296,['code':("depositTaxFeeAndChargeScheme.minAmtException.label"),'default':("Min Amt Exception")],-1)
printHtmlPart(28)
invokeTag('field','g',299,['name':("minAmtException"),'value':(fieldValue(bean: depositTaxFeeAndChargeSchemeInstance, field: 'minAmtException')),'class':("form-control truncated")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',305,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',306,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("minAmtException")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',309,['bean':(depositTaxFeeAndChargeSchemeInstance),'field':("minAmtException")],1)
printHtmlPart(40)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
