import icbs.deposit.Rollover
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_rollover_form_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/rollover/_form.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'rolloverSequence', 'has-error'))
printHtmlPart(1)
invokeTag('message','g',8,['code':("rollover.rolloverSequence.label"),'default':("Rollover Sequence")],-1)
printHtmlPart(2)
invokeTag('field','g',11,['name':("rolloverSequence"),'type':("number"),'value':(rolloverInstance.rolloverSequence),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',17,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',18,['bean':(rolloverInstance),'field':("rolloverSequence")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',21,['bean':(rolloverInstance),'field':("rolloverSequence")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'startDate', 'has-error'))
printHtmlPart(9)
invokeTag('message','g',28,['code':("rollover.startDate.label"),'default':("Start Date")],-1)
printHtmlPart(2)
invokeTag('customDatePicker','g',31,['name':("startDate"),'precision':("day"),'class':("form-control"),'value':(rolloverInstance?.startDate)],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',37,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',38,['bean':(rolloverInstance),'field':("startDate")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',41,['bean':(rolloverInstance),'field':("startDate")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'endDate', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',48,['code':("rollover.endDate.label"),'default':("End Date")],-1)
printHtmlPart(2)
invokeTag('customDatePicker','g',51,['name':("endDate"),'precision':("day"),'class':("form-control"),'value':(rolloverInstance?.endDate)],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',57,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',58,['bean':(rolloverInstance),'field':("endDate")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',61,['bean':(rolloverInstance),'field':("endDate")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'rolloverType', 'has-error'))
printHtmlPart(11)
invokeTag('message','g',68,['code':("rollover.rolloverType.label"),'default':("Rollover Type")],-1)
printHtmlPart(2)
invokeTag('select','g',71,['id':("rolloverType"),'name':("rolloverType.id"),'from':(icbs.lov.RolloverType.list()),'optionKey':("id"),'required':(""),'value':(rolloverInstance?.rolloverType?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',77,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',78,['bean':(rolloverInstance),'field':("rolloverType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',81,['bean':(rolloverInstance),'field':("rolloverType")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'principalAmt', 'has-error'))
printHtmlPart(12)
invokeTag('message','g',88,['code':("rollover.principalAmt.label"),'default':("Principal Amt")],-1)
printHtmlPart(2)
invokeTag('field','g',91,['name':("principalAmt"),'value':(fieldValue(bean: rolloverInstance, field: 'principalAmt')),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',97,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',98,['bean':(rolloverInstance),'field':("principalAmt")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',101,['bean':(rolloverInstance),'field':("principalAmt")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'preTermInterestAmt', 'has-error'))
printHtmlPart(13)
invokeTag('message','g',108,['code':("rollover.preTermInterestAmt.label"),'default':("Pre Term Interest Amt")],-1)
printHtmlPart(2)
invokeTag('field','g',111,['name':("preTermInterestAmt"),'value':(fieldValue(bean: rolloverInstance, field: 'preTermInterestAmt')),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',117,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',118,['bean':(rolloverInstance),'field':("preTermInterestAmt")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',121,['bean':(rolloverInstance),'field':("preTermInterestAmt")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'taxAmt1', 'has-error'))
printHtmlPart(14)
invokeTag('message','g',128,['code':("rollover.taxAmt1.label"),'default':("Tax Amt1")],-1)
printHtmlPart(15)
invokeTag('field','g',131,['name':("taxAmt1"),'value':(fieldValue(bean: rolloverInstance, field: 'taxAmt1')),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',137,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',138,['bean':(rolloverInstance),'field':("taxAmt1")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',141,['bean':(rolloverInstance),'field':("taxAmt1")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'taxAmt2', 'has-error'))
printHtmlPart(16)
invokeTag('message','g',148,['code':("rollover.taxAmt2.label"),'default':("Tax Amt2")],-1)
printHtmlPart(15)
invokeTag('field','g',151,['name':("taxAmt2"),'value':(fieldValue(bean: rolloverInstance, field: 'taxAmt2')),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',157,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',158,['bean':(rolloverInstance),'field':("taxAmt2")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',161,['bean':(rolloverInstance),'field':("taxAmt2")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'taxAmt3', 'has-error'))
printHtmlPart(17)
invokeTag('message','g',168,['code':("rollover.taxAmt3.label"),'default':("Tax Amt3")],-1)
printHtmlPart(15)
invokeTag('field','g',171,['name':("taxAmt3"),'value':(fieldValue(bean: rolloverInstance, field: 'taxAmt3')),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',177,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',178,['bean':(rolloverInstance),'field':("taxAmt3")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',181,['bean':(rolloverInstance),'field':("taxAmt3")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'ctd', 'has-error'))
printHtmlPart(18)
invokeTag('message','g',188,['code':("rollover.ctd.label"),'default':("Ctd")],-1)
printHtmlPart(15)
invokeTag('select','g',191,['id':("ctd"),'name':("ctd.id"),'from':(icbs.deposit.CTD.list()),'optionKey':("id"),'value':(rolloverInstance?.ctd?.id),'class':("many-to-one form-control"),'noSelection':(['null': ''])],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',197,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',198,['bean':(rolloverInstance),'field':("ctd")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',201,['bean':(rolloverInstance),'field':("ctd")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'rolloverStatus', 'has-error'))
printHtmlPart(19)
invokeTag('message','g',208,['code':("rollover.rolloverStatus.label"),'default':("Rollover Status")],-1)
printHtmlPart(15)
invokeTag('select','g',211,['id':("rolloverStatus"),'name':("rolloverStatus.id"),'from':(icbs.lov.RolloverStatus.list()),'optionKey':("id"),'value':(rolloverInstance?.rolloverStatus?.id),'class':("many-to-one form-control"),'noSelection':(['null': ''])],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',217,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',218,['bean':(rolloverInstance),'field':("rolloverStatus")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',221,['bean':(rolloverInstance),'field':("rolloverStatus")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'interestPaymentMode', 'has-error'))
printHtmlPart(20)
invokeTag('message','g',228,['code':("rollover.interestPaymentMode.label"),'default':("Interest Payment Mode")],-1)
printHtmlPart(15)
invokeTag('select','g',231,['id':("interestPaymentMode"),'name':("interestPaymentMode.id"),'from':(icbs.lov.InterestPaymentMode.list()),'optionKey':("id"),'value':(rolloverInstance?.interestPaymentMode?.id),'class':("many-to-one form-control"),'noSelection':(['null': ''])],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',237,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',238,['bean':(rolloverInstance),'field':("interestPaymentMode")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',241,['bean':(rolloverInstance),'field':("interestPaymentMode")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'deposit', 'has-error'))
printHtmlPart(21)
invokeTag('message','g',248,['code':("rollover.deposit.label"),'default':("Deposit")],-1)
printHtmlPart(2)
invokeTag('select','g',251,['id':("deposit"),'name':("deposit.id"),'from':(icbs.deposit.Deposit.list()),'optionKey':("id"),'required':(""),'value':(rolloverInstance?.deposit?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',257,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',258,['bean':(rolloverInstance),'field':("deposit")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',261,['bean':(rolloverInstance),'field':("deposit")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: rolloverInstance, field: 'normalInterestAmt', 'has-error'))
printHtmlPart(22)
invokeTag('message','g',268,['code':("rollover.normalInterestAmt.label"),'default':("Normal Interest Amt")],-1)
printHtmlPart(2)
invokeTag('field','g',271,['name':("normalInterestAmt"),'value':(fieldValue(bean: rolloverInstance, field: 'normalInterestAmt')),'required':(""),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',277,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',278,['bean':(rolloverInstance),'field':("normalInterestAmt")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',281,['bean':(rolloverInstance),'field':("normalInterestAmt")],1)
printHtmlPart(23)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
