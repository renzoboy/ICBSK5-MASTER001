import icbs.admin.TxnTemplate
import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_txnTemplate_formEdit_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/txnTemplate/_formEdit.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'txnType', 'has-error'))
printHtmlPart(1)
invokeTag('message','g',6,['code':("txnTemplate.txnType.label"),'default':("Txn Type")],-1)
printHtmlPart(2)
invokeTag('select','g',9,['id':("txnType"),'name':("txnType.id"),'from':(icbs.lov.TxnType.list()),'noSelection':(['':'']),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.txnType?.id),'onchange':("getcode();"),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',15,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',16,['bean':(txnTemplateInstance),'field':("txnType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',19,['bean':(txnTemplateInstance),'field':("txnType")],1)
printHtmlPart(8)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'code', 'has-error'))
printHtmlPart(9)
invokeTag('message','g',25,['code':("txnTemplate.code.label"),'default':("Code")],-1)
printHtmlPart(10)
invokeTag('textField','g',28,['name':("code"),'id':("code"),'maxlength':("50"),'required':(""),'value':(txnTemplateInstance?.code),'onblur':("validateExistingCodeAjax();"),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',34,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',35,['bean':(txnTemplateInstance),'field':("code")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',38,['bean':(txnTemplateInstance),'field':("code")],1)
printHtmlPart(11)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'description', 'has-error'))
printHtmlPart(12)
invokeTag('message','g',46,['code':("txnTemplate.description.label"),'default':("Description")],-1)
printHtmlPart(10)
invokeTag('textField','g',49,['name':("description"),'id':("description"),'maxlength':("100"),'required':(""),'value':(txnTemplateInstance?.description),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',55,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',56,['bean':(txnTemplateInstance),'field':("description")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',59,['bean':(txnTemplateInstance),'field':("description")],1)
printHtmlPart(13)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'shortDescription', 'has-error'))
printHtmlPart(14)
invokeTag('message','g',65,['code':("txnTemplate.shortDescription.label"),'default':("Short Description")],-1)
printHtmlPart(10)
invokeTag('textField','g',68,['name':("shortDescription"),'id':("shortDescription"),'maxlength':("50"),'value':(txnTemplateInstance?.shortDescription),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',74,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',75,['bean':(txnTemplateInstance),'field':("shortDescription")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',78,['bean':(txnTemplateInstance),'field':("shortDescription")],1)
printHtmlPart(15)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'amlaCode', 'has-error'))
printHtmlPart(16)
invokeTag('message','g',84,['code':("txnTemplate.amlaCode.label"),'default':("Amla Code")],-1)
printHtmlPart(17)
invokeTag('textField','g',87,['name':("amlaCode"),'id':("amlaCode"),'maxlength':("10"),'value':(txnTemplateInstance?.amlaCode),'class':("form-control")],-1)
printHtmlPart(18)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',93,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',94,['bean':(txnTemplateInstance),'field':("amlaCode")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',97,['bean':(txnTemplateInstance),'field':("amlaCode")],1)
printHtmlPart(19)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'memoTxnType', 'has-error'))
printHtmlPart(20)
invokeTag('message','g',104,['code':("txnTemplate.memoTxnType.label"),'default':("Memo Txn Type")],-1)
printHtmlPart(2)
invokeTag('select','g',107,['id':("memoTxnType"),'name':("memoTxnType.id"),'noSelection':(['':'']),'from':(icbs.lov.MemoTxnType.list()),'optionKey':("id"),'required':(""),'onchange':("makeDepContra();"),'value':(txnTemplateInstance?.memoTxnType?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',113,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',114,['bean':(txnTemplateInstance),'field':("memoTxnType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',117,['bean':(txnTemplateInstance),'field':("memoTxnType")],1)
printHtmlPart(21)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(20)
invokeTag('message','g',124,['code':("txnTemplate.memoTxnType.label"),'default':("Dep Contra (Gl Code)")],-1)
printHtmlPart(2)
invokeTag('textField','g',127,['name':("depContra"),'id':("depContra"),'maxlength':("100"),'value':(txnTemplateInstance?.defContraAcct),'onblur':("validateGlCode();"),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',133,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',134,['bean':(txnTemplateInstance),'field':("memoTxnType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',137,['bean':(txnTemplateInstance),'field':("memoTxnType")],1)
printHtmlPart(22)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'depcontra', 'has-error'))
printHtmlPart(20)
invokeTag('message','g',143,['code':("txnTemplate.memoTxnType.label"),'default':("Gl Acct Description")],-1)
printHtmlPart(2)
invokeTag('textField','g',146,['readonly':("true"),'name':("gldescription"),'id':("gldescription"),'maxlength':("100"),'value':(txnTemplateInstance?.amlaCode),'onblur':("validateGlCode();"),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',152,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',153,['bean':(txnTemplateInstance),'field':("memoTxnType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',156,['bean':(txnTemplateInstance),'field':("memoTxnType")],1)
printHtmlPart(23)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'validationFormCode', 'has-error'))
printHtmlPart(24)
invokeTag('message','g',163,['code':("txnTemplate.validationFormCode.label"),'default':("App Type")],-1)
printHtmlPart(25)
invokeTag('checkBox','g',168,['id':("onemyCheckbox"),'name':("onemyCheckbox"),'onchange':("updateAppTypeNow()"),'value':(false)],-1)
printHtmlPart(26)
invokeTag('checkBox','g',169,['id':("twomyCheckbox"),'name':("twomyCheckbox"),'onchange':("updateAppTypeNow()"),'value':(false)],-1)
printHtmlPart(27)
invokeTag('checkBox','g',170,['id':("threemyCheckbox"),'name':("threemyCheckbox"),'onchange':("updateAppTypeNow()"),'value':(false)],-1)
printHtmlPart(28)
invokeTag('checkBox','g',171,['id':("fourmyCheckbox"),'name':("fourmyCheckbox"),'onchange':("updateAppTypeNow()"),'value':(false)],-1)
printHtmlPart(29)
invokeTag('textField','g',172,['name':("appType"),'id':("appType"),'value':(txnTemplateInstance?.appType),'disabled':("disable"),'class':("form-control")],-1)
printHtmlPart(30)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',176,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',176,['bean':(txnTemplateInstance),'field':("appType")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',178,['bean':(txnTemplateInstance),'field':("appType")],1)
printHtmlPart(31)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'currency', 'has-error'))
printHtmlPart(32)
invokeTag('message','g',187,['code':("txnTemplate.currency.label"),'default':("Currency")],-1)
printHtmlPart(2)
invokeTag('select','g',191,['id':("currency"),'name':("currency.id"),'from':(icbs.admin.Currency.findAll{configItemStatus.id == 2}),'optionKey':("id"),'optionValue':("name"),'value':(txnTemplateInstance?.currency?.id),'class':("many-to-one form-control"),'noSelection':(['': ''])],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',196,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',196,['bean':(txnTemplateInstance),'field':("currency")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',198,['bean':(txnTemplateInstance),'field':("currency")],1)
printHtmlPart(33)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'requirePassbook', 'has-error'))
printHtmlPart(34)
invokeTag('message','g',207,['code':("txnTemplate.requirePassbook.label"),'default':("Require Passbook")],-1)
printHtmlPart(2)
invokeTag('select','g',211,['id':("requirePassbook"),'name':("requirePassbook.id"),'from':(icbs.lov.YesNoNa.findAllWhere(status: true)),'optionKey':("id"),'value':(txnTemplateInstance?.requirePassbook?.id),'class':("many-to-one form-control"),'noSelection':(['': ''])],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',216,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',216,['bean':(txnTemplateInstance),'field':("requirePassbook")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',218,['bean':(txnTemplateInstance),'field':("requirePassbook")],1)
printHtmlPart(35)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'txnModule', 'has-error'))
printHtmlPart(36)
invokeTag('message','g',226,['code':("txnTemplate.txnModule.label"),'default':("Txn Module")],-1)
printHtmlPart(2)
invokeTag('select','g',230,['id':("txnModule"),'name':("txnModule.id"),'noSelection':(['':'']),'from':(icbs.lov.TxnModule.list()),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.txnModule?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',235,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',235,['bean':(txnTemplateInstance),'field':("txnModule")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',237,['bean':(txnTemplateInstance),'field':("txnModule")],1)
printHtmlPart(37)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'atmOnlyTxn', 'has-error'))
printHtmlPart(38)
invokeTag('message','g',246,['code':("txnTemplate.atmOnlyTxn.label"),'default':("Atm Only Txn")],-1)
printHtmlPart(39)
invokeTag('select','g',251,['id':("atmOnlyTxn"),'name':("atmOnlyTxn.id"),'noSelection':(['':'']),'from':(icbs.lov.YesNoNa.findAllWhere(status: true)),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.atmOnlyTxn?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',256,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',256,['bean':(txnTemplateInstance),'field':("atmOnlyTxn")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',258,['bean':(txnTemplateInstance),'field':("atmOnlyTxn")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'interbranchTxn', 'has-error'))
printHtmlPart(41)
invokeTag('message','g',267,['code':("txnTemplate.interbranchTxn.label"),'default':("Interbranch Txn")],-1)
printHtmlPart(2)
invokeTag('select','g',271,['id':("interbranchTxn"),'name':("interbranchTxn.id"),'noSelection':(['':'']),'from':(icbs.lov.YesNoNa.list()),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.interbranchTxn?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',276,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',276,['bean':(txnTemplateInstance),'field':("interbranchTxn")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',278,['bean':(txnTemplateInstance),'field':("interbranchTxn")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'systemOnlyTxn', 'has-error'))
printHtmlPart(42)
invokeTag('message','g',287,['code':("txnTemplate.systemOnlyTxn.label"),'default':("System Only Txn")],-1)
printHtmlPart(43)
invokeTag('checkBox','g',291,['name':("systemOnlyTxn"),'id':("systemOnlyTxn"),'class':("form-control"),'value':("")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',297,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',297,['bean':(txnTemplateInstance),'field':("systemOnlyTxn")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',299,['bean':(txnTemplateInstance),'field':("systemOnlyTxn")],1)
printHtmlPart(44)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'batchTxn', 'has-error'))
printHtmlPart(45)
invokeTag('message','g',309,['code':("txnTemplate.batchTxn.label"),'default':("Batch Txn")],-1)
printHtmlPart(2)
invokeTag('select','g',313,['id':("batchTxn"),'name':("batchTxn.id"),'from':(icbs.lov.YesNoNa.list()),'noSelection':(['':'']),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.batchTxn?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',318,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',318,['bean':(txnTemplateInstance),'field':("batchTxn")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',320,['bean':(txnTemplateInstance),'field':("batchTxn")],1)
printHtmlPart(46)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'minAmt', 'has-error'))
printHtmlPart(47)
invokeTag('message','g',330,['code':("txnTemplate.minAmt.label"),'default':("Min Amt")],-1)
printHtmlPart(48)
invokeTag('field','g',336,['readonly':("true"),'name':("minAmt"),'id':("minAmt"),'value':(fieldValue(bean: txnTemplateInstance, field: 'minAmt')),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',341,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',341,['bean':(txnTemplateInstance),'field':("minAmt")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',343,['bean':(txnTemplateInstance),'field':("minAmt")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'maxAmt', 'has-error'))
printHtmlPart(49)
invokeTag('message','g',352,['code':("txnTemplate.maxAmt.label"),'default':("Max Amt")],-1)
printHtmlPart(50)
invokeTag('field','g',356,['readonly':("true"),'name':("maxAmt"),'id':("maxAmt"),'value':(fieldValue(bean: txnTemplateInstance, field: 'maxAmt')),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',361,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',361,['bean':(txnTemplateInstance),'field':("maxAmt")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',363,['bean':(txnTemplateInstance),'field':("maxAmt")],1)
printHtmlPart(51)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'requireTxnDescription', 'has-error'))
printHtmlPart(52)
invokeTag('message','g',374,['code':("txnTemplate.requireTxnDescription.label"),'default':("Require Txn Description")],-1)
printHtmlPart(17)
invokeTag('checkBox','g',378,['readonly':("true"),'name':("requireTxnDescription"),'id':("requireTxnDescription"),'class':("form-control"),'onclick':("return false"),'value':("")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',383,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',383,['bean':(txnTemplateInstance),'field':("requireTxnDescription")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',385,['bean':(txnTemplateInstance),'field':("requireTxnDescription")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'requireTxnReference', 'has-error'))
printHtmlPart(53)
invokeTag('message','g',394,['code':("txnTemplate.requireTxnReference.label"),'default':("Require Txn Reference")],-1)
printHtmlPart(17)
invokeTag('checkBox','g',398,['readonly':("true"),'name':("requireTxnReference"),'id':("requireTxnReference"),'class':("form-control"),'onclick':("return false"),'value':("")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',403,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',403,['bean':(txnTemplateInstance),'field':("requireTxnReference")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',405,['bean':(txnTemplateInstance),'field':("requireTxnReference")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'validationCopyNo', 'has-error'))
printHtmlPart(54)
invokeTag('message','g',414,['code':("txnTemplate.validationCopyNo.label"),'default':("Validation Copy No")],-1)
printHtmlPart(17)
invokeTag('field','g',418,['readonly':("true"),'name':("validationCopyNo"),'id':("validationCopyNo"),'type':("number"),'value':(txnTemplateInstance.validationCopyNo),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',423,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',423,['bean':(txnTemplateInstance),'field':("validationCopyNo")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',425,['bean':(txnTemplateInstance),'field':("validationCopyNo")],1)
printHtmlPart(40)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'validationFormCode', 'has-error'))
printHtmlPart(24)
invokeTag('message','g',434,['code':("txnTemplate.validationFormCode.label"),'default':("Other AMLA Information")],-1)
printHtmlPart(17)
invokeTag('textField','g',438,['name':("validationFormCode"),'id':("validationFormCode"),'value':(txnTemplateInstance?.validationFormCode),'class':("form-control")],-1)
printHtmlPart(3)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',443,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',443,['bean':(txnTemplateInstance),'field':("validationFormCode")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',445,['bean':(txnTemplateInstance),'field':("validationFormCode")],1)
printHtmlPart(55)
invokeTag('hiddenField','g',451,['id':("financialYear"),'name':("financialYear"),'value':(g.formatDate(date: (runDate), format: 'yyyy'))],-1)
printHtmlPart(56)
invokeTag('hiddenField','g',452,['id':("systemOnlyttxn"),'name':("systemOnlyttxn"),'value':(txnTemplateInstance?.systemOnlyTxn)],-1)
printHtmlPart(56)
invokeTag('hiddenField','g',453,['id':("codevalidator"),'name':("codevalidator"),'value':(txnTemplateInstance?.code)],-1)
printHtmlPart(56)
invokeTag('hiddenField','g',454,['id':("idtxntemplate"),'name':("idtxntemplate"),'value':(txnTemplateInstance?.id)],-1)
printHtmlPart(57)
expressionOut.print(hasErrors(bean: txnTemplateInstance, field: 'configItemStatus', 'has-error'))
printHtmlPart(58)
invokeTag('message','g',458,['code':("txnTemplate.configItemStatus.label"),'default':("Config Item Status")],-1)
printHtmlPart(2)
invokeTag('select','g',462,['id':("configItemStatus"),'name':("configItemStatus.id"),'from':(icbs.lov.ConfigItemStatus.list()),'optionKey':("id"),'required':(""),'value':(txnTemplateInstance?.configItemStatus?.id),'class':("many-to-one form-control")],-1)
printHtmlPart(59)
createTagBody(1, {->
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(5)
invokeTag('message','g',467,['error':(it)],-1)
printHtmlPart(6)
})
invokeTag('eachError','g',467,['bean':(txnTemplateInstance),'field':("configItemStatus")],2)
printHtmlPart(7)
})
invokeTag('hasErrors','g',469,['bean':(txnTemplateInstance),'field':("configItemStatus")],1)
printHtmlPart(55)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
