import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_customer_form_customer_othercustomerinfo_otherCustomerInfo_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/customer/form/customer/othercustomerinfo/_otherCustomerInfo.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
printHtmlPart(1)
expressionOut.print(hasErrors(bean: customerInstance, field: 'displayName', 'has-error'))
printHtmlPart(2)
invokeTag('message','g',12,['code':("customer.displayName.label"),'default':("Display Name")],-1)
printHtmlPart(3)
invokeTag('field','g',16,['type':("text"),'id':("displayName"),'name':("displayName"),'readonly':("readonly"),'value':(customerInstance?.displayName),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',21,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',22,['bean':(customerInstance),'field':("displayName")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',25,['bean':(customerInstance),'field':("displayName")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode1', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',30,['code':("customer.customerCode1.label"),'default':("Type of Resident*")],-1)
printHtmlPart(11)
invokeTag('select','g',33,['id':("dosriCode"),'name':("customerCode1.id"),'from':(icbs.lov.ResidentType.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode1?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',38,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',39,['bean':(customerInstance),'field':("customerCode1")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',42,['bean':(customerInstance),'field':("customerCode1")],1)
printHtmlPart(16)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode2', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',47,['code':("customer.customerCode2.label"),'default':("Risk Classification*")],-1)
printHtmlPart(11)
invokeTag('select','g',50,['id':("dosriCode"),'name':("customerCode2.id"),'from':(icbs.lov.RiskType.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode2?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',55,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',56,['bean':(customerInstance),'field':("customerCode2")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',59,['bean':(customerInstance),'field':("customerCode2")],1)
printHtmlPart(17)
expressionOut.print(hasErrors(bean: customerInstance, field: 'pepDescription', 'has-error'))
printHtmlPart(18)
invokeTag('message','g',64,['code':("customer.pepDescription.label"),'default':("PEP Description")],-1)
printHtmlPart(19)
invokeTag('textField','g',68,['name':("pepDescription"),'maxlength':("50"),'value':(customerInstance?.pepDescription),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',73,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',74,['bean':(customerInstance),'field':("pepDescription")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',77,['bean':(customerInstance),'field':("pepDescription")],1)
printHtmlPart(20)
expressionOut.print(hasErrors(bean: customerInstance, field: 'amla', 'has-error'))
printHtmlPart(21)
invokeTag('message','g',84,['code':("customer.amla.label"),'default':("Verified AMLA Blocked")],-1)
printHtmlPart(19)
invokeTag('textField','g',88,['name':("amla"),'maxlength':("50"),'value':(customerInstance?.amla),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',93,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',94,['bean':(customerInstance),'field':("amla")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',97,['bean':(customerInstance),'field':("amla")],1)
printHtmlPart(22)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode3', 'has-error'))
printHtmlPart(23)
invokeTag('message','g',103,['code':("customer.customerCode3.label"),'default':(" Size of Firm*")],-1)
printHtmlPart(11)
invokeTag('select','g',106,['id':("dosriCode"),'name':("customerCode3.id"),'from':(icbs.lov.FirmSize.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode3?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',111,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',112,['bean':(customerInstance),'field':("customerCode3")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',115,['bean':(customerInstance),'field':("customerCode3")],1)
printHtmlPart(16)
expressionOut.print(hasErrors(bean: customerInstance, field: 'sourceOfIncome', 'has-error'))
printHtmlPart(24)
invokeTag('message','g',120,['code':("customer.sourceOfIncome.label"),'default':("Source of Income")],-1)
printHtmlPart(25)
invokeTag('textField','g',125,['id':("sourceOfIncome"),'name':("sourceOfIncome"),'maxlength':("50"),'':(""),'value':(customerInstance?.sourceOfIncome),'class':("form-control")],-1)
printHtmlPart(26)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',130,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',131,['bean':(customerInstance),'field':("sourceOfIncome")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',134,['bean':(customerInstance),'field':("sourceOfIncome")],1)
printHtmlPart(27)
if(true && (customerInstance?.type?.id==1)) {
printHtmlPart(28)
expressionOut.print(hasErrors(bean: customerInstance, field: 'dosriCode', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',140,['code':("customer.dosriCode.label"),'default':("DOSRI Code*")],-1)
printHtmlPart(11)
invokeTag('select','g',143,['id':("dosriCode"),'name':("dosriCode.id"),'from':(icbs.lov.CustomerDosriCode.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.dosriCode?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',148,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',149,['bean':(customerInstance),'field':("dosriCode")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',152,['bean':(customerInstance),'field':("dosriCode")],2)
printHtmlPart(29)
expressionOut.print(hasErrors(bean: customerInstance, field: 'noOfDependent', 'has-error'))
printHtmlPart(30)
invokeTag('message','g',158,['code':("customer.noOfDependent.label"),'default':("No. of Dependents")],-1)
printHtmlPart(31)
invokeTag('textField','g',161,['type':(""),'name':("noOfDependent"),'value':(customerInstance?.noOfDependent),'class':("form-control")],-1)
printHtmlPart(32)
createTagBody(2, {->
printHtmlPart(33)
createTagBody(3, {->
printHtmlPart(34)
invokeTag('message','g',166,['error':(it)],-1)
printHtmlPart(35)
})
invokeTag('eachError','g',167,['bean':(customerInstance),'field':("noOfDependent")],3)
printHtmlPart(36)
})
invokeTag('hasErrors','g',170,['bean':(customerInstance),'field':("noOfDependent")],2)
printHtmlPart(37)
expressionOut.print(hasErrors(bean: customerInstance, field: 'motherMaidenName', 'has-error'))
printHtmlPart(38)
invokeTag('message','g',175,['code':("customer.motherMaidenName.label"),'default':("Mother's Maiden Name")],-1)
printHtmlPart(39)
invokeTag('textField','g',179,['name':("motherMaidenName"),'value':(customerInstance?.motherMaidenName),'class':("form-control")],-1)
printHtmlPart(32)
createTagBody(2, {->
printHtmlPart(33)
createTagBody(3, {->
printHtmlPart(34)
invokeTag('message','g',184,['error':(it)],-1)
printHtmlPart(35)
})
invokeTag('eachError','g',185,['bean':(customerInstance),'field':("motherMaidenName")],3)
printHtmlPart(36)
})
invokeTag('hasErrors','g',188,['bean':(customerInstance),'field':("motherMaidenName")],2)
printHtmlPart(37)
expressionOut.print(hasErrors(bean: customerInstance, field: 'fatherName', 'has-error'))
printHtmlPart(40)
invokeTag('message','g',193,['code':("customer.fatherName.label"),'default':("Father's Name")],-1)
printHtmlPart(41)
invokeTag('textField','g',197,['name':("fatherName"),'value':(customerInstance?.fatherName),'class':("form-control")],-1)
printHtmlPart(42)
createTagBody(2, {->
printHtmlPart(43)
createTagBody(3, {->
printHtmlPart(44)
invokeTag('message','g',202,['error':(it)],-1)
printHtmlPart(45)
})
invokeTag('eachError','g',203,['bean':(customerInstance),'field':("fatherName")],3)
printHtmlPart(46)
})
invokeTag('hasErrors','g',206,['bean':(customerInstance),'field':("fatherName")],2)
printHtmlPart(47)
expressionOut.print(hasErrors(bean: customerInstance, field: 'spouseFirstName', 'has-error'))
printHtmlPart(48)
invokeTag('message','g',213,['code':("customer.spouseFirstName.label"),'default':("First Name")],-1)
printHtmlPart(49)
invokeTag('textField','g',217,['name':("spouseFirstName"),'id':("xspouseFirstName"),'value':(customerInstance?.spouseFirstName),'class':("form-control")],-1)
printHtmlPart(6)
createTagBody(2, {->
printHtmlPart(50)
createTagBody(3, {->
printHtmlPart(51)
invokeTag('message','g',222,['error':(it)],-1)
printHtmlPart(52)
})
invokeTag('eachError','g',223,['bean':(customerInstance),'field':("spouseFirstName")],3)
printHtmlPart(53)
})
invokeTag('hasErrors','g',226,['bean':(customerInstance),'field':("spouseFirstName")],2)
printHtmlPart(54)
expressionOut.print(hasErrors(bean: customerInstance, field: 'spouseMiddleName', 'has-error'))
printHtmlPart(55)
invokeTag('message','g',231,['code':("customer.spouseMiddleName.label"),'default':("Middle Name")],-1)
printHtmlPart(56)
invokeTag('textField','g',234,['name':("spouseMiddleName"),'id':("spouseMiddleName"),'value':(customerInstance?.spouseMiddleName),'class':("form-control")],-1)
printHtmlPart(6)
createTagBody(2, {->
printHtmlPart(50)
createTagBody(3, {->
printHtmlPart(51)
invokeTag('message','g',239,['error':(it)],-1)
printHtmlPart(52)
})
invokeTag('eachError','g',240,['bean':(customerInstance),'field':("spouseMiddleName")],3)
printHtmlPart(53)
})
invokeTag('hasErrors','g',243,['bean':(customerInstance),'field':("spouseMiddleName")],2)
printHtmlPart(54)
expressionOut.print(hasErrors(bean: customerInstance, field: 'spouseLastName', 'has-error'))
printHtmlPart(57)
invokeTag('message','g',248,['code':("customer.spouseLastName.label"),'default':("Last Name")],-1)
printHtmlPart(49)
invokeTag('textField','g',252,['name':("spouseLastName"),'id':("spouseLastName"),'value':(customerInstance?.spouseLastName),'class':("form-control")],-1)
printHtmlPart(6)
createTagBody(2, {->
printHtmlPart(50)
createTagBody(3, {->
printHtmlPart(51)
invokeTag('message','g',257,['error':(it)],-1)
printHtmlPart(52)
})
invokeTag('eachError','g',258,['bean':(customerInstance),'field':("spouseLastName")],3)
printHtmlPart(53)
})
invokeTag('hasErrors','g',261,['bean':(customerInstance),'field':("spouseLastName")],2)
printHtmlPart(54)
expressionOut.print(hasErrors(bean: customerInstance, field: 'spouseBirthDate', 'has-error'))
printHtmlPart(58)
invokeTag('message','g',266,['code':("customer.spouseBirthDate.label"),'default':("Birth Date")],-1)
printHtmlPart(59)
invokeTag('customDatePicker','g',269,['name':("spouseBirthDate"),'id':("spouseBirthDate"),'value':(customerInstance?.spouseBirthDate),'class':("form-control")],-1)
printHtmlPart(42)
createTagBody(2, {->
printHtmlPart(43)
createTagBody(3, {->
printHtmlPart(44)
invokeTag('message','g',274,['error':(it)],-1)
printHtmlPart(45)
})
invokeTag('eachError','g',275,['bean':(customerInstance),'field':("spouseBirthDate")],3)
printHtmlPart(46)
})
invokeTag('hasErrors','g',278,['bean':(customerInstance),'field':("spouseBirthDate")],2)
printHtmlPart(60)
expressionOut.print(hasErrors(bean: customerInstance, field: 'spouseContactNo', 'has-error'))
printHtmlPart(61)
invokeTag('message','g',284,['code':("customerInstance.spouseContactNo.label"),'default':("Contact Number")],-1)
printHtmlPart(59)
invokeTag('textField','g',287,['id':("spouseContactNo"),'name':("spouseContactNo"),'maxlength':("50"),'value':(customerInstance?.spouseContactNo),'class':("form-control")],-1)
printHtmlPart(42)
createTagBody(2, {->
printHtmlPart(43)
createTagBody(3, {->
printHtmlPart(44)
invokeTag('message','g',292,['error':(it)],-1)
printHtmlPart(45)
})
invokeTag('eachError','g',293,['bean':(customerInstance),'field':("spouseContactNo")],3)
printHtmlPart(62)
})
invokeTag('hasErrors','g',296,['bean':(customerInstance),'field':("spouseContactNo")],2)
printHtmlPart(63)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nationality', 'has-error'))
printHtmlPart(64)
invokeTag('message','g',304,['code':("customer.natonality.label"),'default':("Nationality")],-1)
printHtmlPart(65)
invokeTag('select','g',308,['id':("nationality"),'name':("nationality.id"),'from':(icbs.lov.Lov.findAllByGroupCodeAndStatus("NATL",true)),'optionKey':("id"),'optionValue':("itemValue"),'value':(customerInstance?.nationality?.id),'class':("form-control")],-1)
printHtmlPart(66)
createTagBody(2, {->
printHtmlPart(67)
createTagBody(3, {->
printHtmlPart(42)
invokeTag('message','g',313,['error':(it)],-1)
printHtmlPart(68)
})
invokeTag('eachError','g',314,['bean':(customerInstance),'field':("nationality")],3)
printHtmlPart(69)
})
invokeTag('hasErrors','g',317,['bean':(customerInstance),'field':("nationality")],2)
printHtmlPart(70)
expressionOut.print(hasErrors(bean: customerInstance, field: 'religion', 'has-error'))
printHtmlPart(71)
invokeTag('message','g',321,['code':("customer.religion.label"),'default':("Religion")],-1)
printHtmlPart(72)
invokeTag('select','g',325,['id':("religion"),'name':("religion.id"),'required':("true"),'noSelection':(['':'']),'from':(icbs.lov.Religion.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.religion?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',330,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',331,['bean':(customerInstance),'field':("religion")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',334,['bean':(customerInstance),'field':("religion")],2)
printHtmlPart(73)
expressionOut.print(hasErrors(bean: customerInstance, field: 'sssNo', 'has-error'))
printHtmlPart(74)
invokeTag('message','g',340,['code':("customer.sssNo.label"),'default':("SSS")],-1)
printHtmlPart(75)
invokeTag('textField','g',344,['name':("sssNo"),'maxlength':("50"),'value':(customerInstance?.sssNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',349,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',350,['bean':(customerInstance),'field':("sssNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',353,['bean':(customerInstance),'field':("sssNo")],2)
printHtmlPart(76)
expressionOut.print(hasErrors(bean: customerInstance, field: 'gisNo', 'has-error'))
printHtmlPart(77)
invokeTag('message','g',360,['code':("customer.gisNo.label"),'default':("GSIS")],-1)
printHtmlPart(19)
invokeTag('textField','g',364,['name':("gisNo"),'maxlength':("50"),'value':(customerInstance?.gisNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',369,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',370,['bean':(customerInstance),'field':("gisNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',373,['bean':(customerInstance),'field':("gisNo")],2)
printHtmlPart(78)
expressionOut.print(hasErrors(bean: customerInstance, field: 'tinNo', 'has-error'))
printHtmlPart(79)
invokeTag('message','g',379,['code':("customer.tinNo.label"),'default':("TIN")],-1)
printHtmlPart(80)
invokeTag('textField','g',382,['name':("tinNo"),'maxlength':("50"),'value':(customerInstance?.tinNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',387,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',388,['bean':(customerInstance),'field':("tinNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',391,['bean':(customerInstance),'field':("tinNo")],2)
printHtmlPart(81)
expressionOut.print(hasErrors(bean: customerInstance, field: 'passportNo', 'has-error'))
printHtmlPart(82)
invokeTag('message','g',399,['code':("customer.passportNo.label"),'default':("Passport No")],-1)
printHtmlPart(11)
invokeTag('textField','g',402,['name':("passportNo"),'maxlength':("50"),'value':(customerInstance?.passportNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',407,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',408,['bean':(customerInstance),'field':("passportNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',411,['bean':(customerInstance),'field':("passportNo")],2)
printHtmlPart(83)
}
printHtmlPart(84)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1592209176000L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
